# uncomment if these packages are not installed
# install.packages(c('tidyverse'))
# analyzes naming trends in the social security names database (national).
# takes interest in frequency of hilary/hillary before and after clinton elections.
# load packages
library(tidyverse)
# clear environment
rm(list = ls())
# read in names dataset
ssa <- read_csv("https://github.com/tomvogl/econ121/raw/main/data/ssa_names.csv")
library(tidyverse)
ssa <- read_csv("https://github.com/tomvogl/econ121/raw/main/data/ssa_names.csv")
View(ssa)
summary(ssa)
slice(ssa, 1:10)
ssa %>%
filter(year==2022) %>%              # only look at 2022 names
group_by(sex) %>%                   # look separately within M and F
slice_max(frequency, n=10)          # top 10 observations by sex
ssa %>%
filter(year==1940) %>%
group_by(sex) %>%
slice_max(frequency, n=10)
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
annual_totals
ggplot(annual_totals, aes(x = year, y=total)) +    # use annual_totals data frame, define x and y axes
geom_line()                                      # line plot
clinton_graph <-                                                 # store as clinton_graph
ssa %>%
filter(sex=="F" & (name=="Hilary" | name=="Hillary")) %>%    # keep relevant names
ggplot(aes(x = year, y = frequency, color = name)) +         # the addition `color` draws separate line plots for each name
geom_line() +                                              # line plot
geom_vline(xintercept=c(1992, 2008, 2016))
clinton_graph
library(tidyverse)
ssa <- read_csv("https://github.com/tomvogl/econ121/raw/main/data/ssa_names.csv")
View(ssa)
summary(ssa)
slice(ssa, 1:10)
ssa %>%
filter(year==2022) %>%              # only look at 2022 names
group_by(sex) %>%                   # look separately within M and F
slice_max(frequency, n=10)          # top 10 observations by sex
ssa %>%
filter(year==1940) %>%
group_by(sex) %>%
slice_max(frequency, n=10)
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
View(annual_totals)
annual_totals
ggplot(annual_totals, aes(x = year, y=total)) +    # use annual_totals data frame, define x and y axes
geom_line()                                      # line plot
ssa %>%
filter(sex=="F" & (name=="Hilary" | name=="Hillary")) %>%    # keep relevant names
ggplot(aes(x = year, y = frequency, color = name)) +         # the addition `color` draws separate line plots for each name
geom_line() +                                              # line plot
geom_vline(xintercept=c(1992, 2008, 2016))
# uncomment if these packages are not installed
# install.packages(c('tidyverse'))
# analyzes naming trends in the social security names database (national).
# takes interest in frequency of hilary/hillary before and after clinton elections.
# load packages
library(tidyverse)
# clear environment
rm(list = ls())
# read in names dataset
ssa <- read_csv("https://github.com/tomvogl/econ121/raw/main/data/ssa_names.csv")
# summarize
summary(ssa)
# to understand data structure, look at first 10 rows
slice(ssa, 1:10)
# could have equivalently used the pipe operator
ssa %>% slice(1:10)
# what are the most common names today?
# create a table of the top-ten boys and girls names in 2022
ssa %>%
filter(year==2022) %>%              # only look at 2022 names
group_by(sex) %>%                   # look separately within M and F
slice_max(frequency, n=10)          # top 10 observations by sex
# what were the most common names in 1940?
# create a table of the top-ten boys and girls names in 1940
ssa %>%
filter(year==1940) %>%
group_by(sex) %>%
slice_max(frequency, n=10)
# how has the number of babies changed over time?
# create a table of the total number of babies by year
# and then store the table under the name annual_totals
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
# let's have a look at the table
annual_totals
# too many rows to be interpretable!
# let's do it as a line graph using ggplot()
ggplot(annual_totals, aes(x = year, y=total)) +    # use annual_totals data frame, define x and y axes
geom_line()                                      # line plot
# could have equivalently used a pipe
annual_totals %>%
ggplot(aes(x = year, y=total)) +
geom_line()
# let's look at the girl names Hilary and Hillary
# how did their frequency change because of Hillary Clinton?
# let's graph counts of both names with vertical lines at
# the election years involving Bill or Hilary Clinton,
# 1992, 2008, and 2016.
# here we will use pipes and ggplot() at the same time,
# and we will store the graph as clinton_graph so we can
# modify it after
clinton_graph <-                                                 # store as clinton_graph
ssa %>%
filter(sex=="F" & (name=="Hilary" | name=="Hillary")) %>%    # keep relevant names
ggplot(aes(x = year, y = frequency, color = name)) +         # the addition `color` draws separate line plots for each name
geom_line() +                                              # line plot
geom_vline(xintercept=c(1992, 2008, 2016))                 # add vertical lines
clinton_graph
load(url("https://github.com/tomvogl/econ121/raw/main/data/nlsy79.rds"))
glimpse(nlsy79)
library(tidyverse)
glimpse(nlsy79)
rm(list=ls())
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
# load nlsy79.Rdata
load(url("https://github.com/tomvogl/econ121/raw/main/data/nlsy79.rds"))
# data structure
glimpse(nlsy79)
# mean and sd of labor earnings (na.rm=TRUE removes missing values from the calculation)
mean(nlsy79$laborinc18,na.rm=TRUE)
sd(nlsy79$laborinc18,na.rm=TRUE)
# more detailed summary with percentiles
summary(nlsy79$laborinc18)
nlsy79 %>%
ggplot(aes(x = laborinc18)) +
geom_histogram() +
facet_wrap(~black, ncol=1) # separate graphs by race, stacked into one column
nlsy79 %>%
drop_na(laborinc18) %>% # removes NA values so we don't need to use na.rm below
group_by(black) %>%
summarize(mean=mean(laborinc18),
sd=sd(laborinc18),
n=n())
(50798-31505)/sqrt(70856^2/4558 + 46907^2/2013)
t.test(laborinc18 ~ black, data = nlsy79)
feols(laborinc18 ~ black, data = nlsy79, vcov = 'hetero')
model1 <- lm(laborinc18 ~ black, data = nlsy79)
model1
summary(model1)
summary(nlsy79$hours18)
nlsy79_workers <-
nlsy79 %>%
filter(hours18>=1000 & laborinc18>0)
summary(nlsy79_workers$hours18)
nlsy79_workers %>%
drop_na(laborinc18) %>%
group_by(black) %>%
summarize(mean=mean(laborinc18),
sd=sd(laborinc18),
n=n())
nlsy79_workers <-
nlsy79_workers %>%
mutate(loginc18 = log(laborinc18))
nlsy79_workers %>%
drop_na(loginc18) %>%
group_by(black) %>%
summarize(mean=format(mean(loginc18, na.rm = TRUE)),   # the format() function is just to report more decimal places
sd=sd(loginc18, na.rm = TRUE),
n=n())
# difference:
10.851-10.616
(10.851-10.616)/sqrt(.867^2/3015 + .849^2/1078)
t.test(loginc18 ~ black, data = nlsy79_workers)
feols(loginc18 ~ black, data = nlsy79_workers, vcov = 'hetero')
rm(list=ls())
rm(list=ls())
library(tidyverse)
library(fixest)
# load nlsy79.Rdata
load(url("https://github.com/tomvogl/econ121/raw/main/data/nlsy79.rds"))
glimpse(nlsy79)
View(nlsy79)
mean(nlsy79$laborinc18,na.rm=TRUE)
sd(nlsy79$laborinc18,na.rm=TRUE)
summary(nlsy79$laborinc18)
nlsy79 %>%
ggplot(aes(x = laborinc18)) +
geom_histogram() +
facet_wrap(~black, ncol=1) # separate graphs by race, stacked into one column
nlsy79 %>%
drop_na(laborinc18) %>% # removes NA values so we don't need to use na.rm below
group_by(black) %>%
summarize(mean=mean(laborinc18),
sd=sd(laborinc18),
n=n())
50798-31505
(50798-31505)/sqrt(70856^2/4558 + 46907^2/2013)
t.test(laborinc18 ~ black, data = nlsy79)
feols(laborinc18 ~ black, data = nlsy79, vcov = 'hetero')
lm(laborinc18 ~ black, data = nlsy79)
model1 <- lm(laborinc18 ~ black, data = nlsy79)
summary(model1)
summary(nlsy79$hours18)
nlsy79_workers <-
nlsy79 %>%
filter(hours18>=1000 & laborinc18>0)
nlsy79_workers %>%
drop_na(laborinc18) %>%
group_by(black) %>%
summarize(mean=mean(laborinc18),
sd=sd(laborinc18),
n=n())
nlsy79_workers <-
nlsy79_workers %>%
mutate(loginc18 = log(laborinc18))
feols(loginc18 ~ black, data = nlsy79_workers, vcov = 'hetero')
rm(list=ls())
rm(list=ls())
library(tidyverse)
library(fixest)
# load nlsy79.Rdata
load(url("https://github.com/tomvogl/econ121/raw/main/data/nlsy79.rds"))
glimpse(nlsy79)
View(nlsy79)
mean(nlsy79$laborinc18,na.rm=TRUE)
sd(nlsy79$laborinc18,na.rm=TRUE)
summary(nlsy79$laborinc18)
nlsy79 %>%
ggplot(aes(x = laborinc18)) +
geom_histogram() +
facet_wrap(~black, ncol=1) # separate graphs by race, stacked into one column
nlsy79 %>%
drop_na(laborinc18) %>% # removes NA values so we don't need to use na.rm below
group_by(black) %>%
summarize(mean=mean(laborinc18),
sd=sd(laborinc18),
n=n())
50798-31505
# t-statistic
(50798-31505)/sqrt(70856^2/4558 + 46907^2/2013)
t.test(laborinc18 ~ black, data = nlsy79)
feols(laborinc18 ~ black, data = nlsy79, vcov = 'hetero')
summary(nlsy79$hours18)
nlsy79_workers <-
nlsy79 %>%
filter(hours18>=1000 & laborinc18>0)
nlsy79_workers %>%
drop_na(laborinc18) %>%
group_by(black) %>%
summarize(mean=mean(laborinc18),
sd=sd(laborinc18),
n=n())
nlsy79_workers <-
nlsy79_workers %>%
mutate(loginc18 = log(laborinc18))
feols(loginc18 ~ black, data = nlsy79_workers, vcov = 'hetero')
